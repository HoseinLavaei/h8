// NOTE: The first letter of shows the size of the register. look at the table below for information about sizes, Also flags don't have any prefixes, but they have suffix "F."
//  _________________________________________________________________
// |  e : 8 , x : 16 , r : 32 , h :64 , f : 128 , z : 256 , q : 512  |
//  _________________________________________________________________


// There are eight named "General purpose" registers named as:
ea: The A 8bit register
eb: The B 8bit register
ec: The C 8bit register
ed: The D 8bit register
ee: The E 8bit register
ef: The F 8bit register
xg: The G 16bit register (used for memory access and other things)
exg0: The first 8bit of xg
exg1: The second 8bit of xg
xh: The H 16bit register (used for memory access and other things)
exh0: The first 8bit of xh
exh1: The second 8bit of xh

// There are two "Pointer" registers named as:
xsp: The stack pointer (points to the top of stack)
exsp0: The first 8bit of xsp
exsp1: The second 8bit of xsp
xip: The instruction pointer (points to the next instruction that will be executed)
exip0: The first 8bit of xip
exip1: The Second 8bit of xip

// There are three "control" registers named as:
xpfa: Page fault address 16bit register (stores the address of last page that caused a page fault)
expfa0: The first 8bit of xpfa
expfa1: The second 8bit of xpfa
xpd: Page directory 16bit register (points to the address of the page directory)
expd0: The first 8bit of xpd
expd1: The Second 8bit of xpd
etp: Task priority 8bit register (only interrupts with priority greater than this register's value are delivered)
emb: The memory bank 8bit register (stores witch memory bank the system is accessing)

// There are two "System table" registers named as:
xidt: Interrupt descriptor table 16bit register (points to the Interrupt descriptor table which stores 16bit pointers to the Interrupt tasks)
exidt0: The first 8bit of xidt
exidt1: The second 8bit of xidt
xidtl: Interrupt descriptor table limit 16bit register (size of the interrupt descriptor table minus 1)
exidtl0: The first 8bit of xidtl
exidtl1: The second 8bit of xidtl

// There are six "Floating point" registers named as:
xmm0: The first 16bit floating point register
exmm00: The first 8bit of xmm0
exmm01: The second 8bit of xmm0
xmm1: The second 16bit floating point register
exmm10: The first 8bit of xmm1
exmm11: The second 8bit of xmm1
xmm2: The third 16bit floating point register
exmm20: The first 8bit of xmm2
exmm21: The second 8bit of xmm2
xmm3: The fourth 16bit floating point register
exmm30: The first 8bit of xmm3
exmm31: The second 8bit of xmm3
rmm0: The first 32bit floating point register
xrmm00: The first 16bit of rmm0
xrmm01: The second 16bit of rmm0
ermm00: The first 8bit of rmm0
ermm01: The second 8bit of rmm0
ermm02: The third 8bit of rmm0
ermm03: The fourth 8bit of rmm0
rmm1: The second 32bit floating point register
xrmm10: The first 16bit of rmm0
xrmm11: The second 16bit of rmm0
ermm10: The first 8bit of rmm0
ermm11: The second 8bit of rmm0
ermm12: The third 8bit of rmm0
ermm13: The fourth 8bit of rmm0

// There are 16 named "Flag" registers named as (these bits are all in a register named xflag):
CF: Carry flag (Set if an unsigned operation generates a borrow, if clear otherwise)
OF: Overflow flag (Set if a signed operation generates a borrow, if clear otherwise)
SF: Sign flag (Set if a signed operation result's is negative, clear if otherwise)
ZF: Zero flag (Set if an operation result is zero, clear if otherwise)
AF: Adjust flag (Set if an unsigned operation generates a half carry, clear otherwise)
TF: Trap flag (Set to allow single-step debugging, clear otherwise)
IF: Interrupt Flag (Set to enable interrupts, clear otherwise)
DF: Direction flag (set to move strings backward, clear for forward)
WF: Write protect flag (if set you cant write to read only pages of the memory)
GEF: Greater or Equal flag (if last comparing operation's result is "Greater" or "Equal")
GF: Greater flag (if last comparing operation's result is "Greater" set, clear otherwise)
EF: Equal flag (if last comparing operation's result is "Equal" set, clear otherwise)
LF: Less flag (if last comparing operation's result is "Less" set, clear otherwise)
LEF: Less or Equal flag (if last comparing operation's result is "Less" or "Equal" set, clear otherwise)
// access mode is 2bit flag witch makes 4 access modes. 0: kernel mode. 1: root mode. 2: user mode. 3: vm mode.
AMF0: Access mode flag 0
AMF1: Access mode flag 1

// There are eight General purpose flags named with numbers (these bits are all in a register named egflag):
F0
F1
F2
F3
F4
F5
F6
F7