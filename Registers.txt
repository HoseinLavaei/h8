// NOTE : First letter of shows the size of the register. look at the table below for information about sizes. Also flags doesnt have any prefixes but they have suffix "F".
//  _________________________________________________________________
// |  e : 8 , x : 16 , r : 32 , h :64 , f : 128 , z : 256 , q : 512  |
//  _________________________________________________________________


// There are 6 named "General purpose" registers named as(they can do jobs outside their name) :
eax : The accumulator 8bit register
ebx : The base 8bit register
ecx : The counter 8bit register
edx : The data 8bit register
eex : The source index 8bit register
efx : The destination index 8bit register

// There are 10 "General purpose" registers named with numbers :
e0 
e1 
e2
e3 
e4 
e5 
e6 
e7 
e8 
e9

// There are 2 "Pointer" registers named as :
xsp : The stack pointer (points to the top of stack)
xip : The instruction pointer (points to the next instruction that will be executed)

// There are 8 "Stack" registers (filled with top 8 bytes in stack) named with numbers :
es0 : Filled with the top of the stack
es1 : Filled with the byte that is 1 byte under the top of the stack
es2 : Filled with the byte that is 2 byte under the top of the stack
es3 : Filled with the byte that is 3 byte under the top of the stack
es4 : Filled with the byte that is 4 byte under the top of the stack
es5 : Filled with the byte that is 5 byte under the top of the stack
es6 : Filled with the byte that is 6 byte under the top of the stack
es7 : Filled with the byte that is 7 byte under the top of the stack

// There are n "control" registers named as :
xpfa : Page fault address 16bit register (stores the address of the first sectore of last page that caused a page fault)
xpd : Page directory 16bit register (points to the address of the page directory page)
etp : Task priority 8bit register (only interrupts with priority greater than this register's value are delivered)

// There are n "System table" registers named as :
xidt : Interrupt descriptor table 16bit register (points to the Interrupt descriptor table witch stores 16bit pointers to the Interrupt tasks)
xidtl : Interrupt descriptor table limit 16bit register (size of the interrupt descriptor table minus 1)

// There are n "Floating point" registers named as :
xmm0 : First 16bit floating point register
xmm1 : Second 16bit floating point register
xmm2 : Third 16bit floating point register
xmm3 : Forth 16bit floating point register
rmm0 : First 32bit floating point register
rmm1 : Second 32bit floating point register

// There are n named "Flag" registers named as :
CF : Carry flag (Set if an unsigned operation generates a borrow, if clear otherwise)
OF : Overflow flag (Set if a signed operation generates a borrow, if clear otherwise)
SF : Sign flag (Set if a signed operation result's is negative, clear if otherwise)
ZF : Zero flag (Set if an operation result is zero, clear if otherwise)
PF : Parity flag (Set if sum of 1's in last operation result is even, clear if its odd)
AF : Adjust flag (Set if an unsigned operation generates a borrow in the half register)
RF : Round flag (Set if an operation's result is rounded)
TF : Trap flag (Set single step mode for debugging, clear otherwise)
IF : Interrupt Flag (Set to enable interrupts, clear otherwise)
DF : Direction flag (set to move strings forward, clear for backward)
BF : Big endian flag (Set to enable big endian mode, clear otherwise)
WF : Wait flag (set if core is waiting for an interrupt, clear otherwise)
RF : Read only flag (if set you cant write to read only parts of the memory)
// access mode is 2bit flag witch makes 4 access modes. 0 : kernel mode. 1 : root mode. 2 : user mode. 3 : vm mode.
AMF0 : Access mode flag 0  
AMF1 : Access mode flag 1 

// There are n "Flag" registers named with numbers :
F0
F1
F2
